networks:
  delivery-network:
    name: delivery-network

services:

  backend:
    restart: always
    #container_name: backend_cont
    build:
      context: ./backend
      dockerfile: ./Dockerfile
    #develop:
      #watch:
        #- action: sync
          #path: ./backend/app
          #target: /app
    ports:
      - "8000:8000"
    volumes:
      - ./backend/:/backend
    environment:
      #- DATABASE_URL=mysql+aiomysql://admin:password@db:3306/delivery
      - DATABASE_URL=mysql+aiomysql://admin:password@db:3306
      - CACHE_URL=redis://admin:password@redis:6379
      - MYSQL_ROOT_PASSWORD=root_password
      - MYSQL_DATABASE=delivery
      - MYSQL_USER=admin
      - MYSQL_PASSWORD=password
    networks:
      - delivery-network
    depends_on:
      - db
      - cache

  db:
    restart: always
    image: mysql:latest
    ports:
      - "3306:3306"
    #container_name: mysql_cont
    container_name: mysql
    environment:
      - MYSQL_ROOT_PASSWORD=root_password
      - MYSQL_DATABASE=delivery
      - MYSQL_USER=admin
      - MYSQL_PASSWORD=password
    volumes:
      - ./mysql_data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"]
      interval: 10s
      timeout: 10s
      retries: 5
    networks:
      - delivery-network

  celery:
    container_name: celery_cont
    build:
      context: ./backend
    #working_dir: /backend/celery_tasks
    #command: celery -A app worker --pool threads --concurrency 2 --loglevel=info
    working_dir: /backend
    command: celery -A celery_tasks.app worker --pool threads --concurrency 2 --loglevel=info
    environment:
      - DATABASE_URL=mysql+aiomysql://admin:password@db:3306
      - CACHE_URL=redis://admin:password@redis:6379
    volumes:
      - ./backend/app/:/backend/app
      - ./backend/celery_tasks/:/backend/celery_tasks
    depends_on:
      - cache
      - backend
      - db
    networks:
      - delivery-network

  #beat:
    #container_name: celery_beat_cont
    #build:
      #context: ./backend
    #command: celery -A /backend/celery beat -l INFO --scheduler
    #environment:
      #- DATABASE_URL=mysql+aiomysql://admin:password@db:3306
      #- CACHE_URL=redis://admin:password@redis
    #volumes:
      #- .backend:/backend/app
      #- .backend:/backend/celery
      #- .backend:/backend/alembic
    #depends_on:
      #- cache
      #- backend
      #- db

  cache:
    restart: unless-stopped
    #image: redis:7.0
    image: redis:latest
    #container_name: redis_cont
    container_name: redis
    environment:
      - REDIS_PASSWORD=password
      - REDIS_USER=admin
      - REDIS_USER_PASSWORD=password
    networks:
      - delivery-network
    volumes:
      - ./redis_data:/var/lib/redis
      - ./redis:/usr/local/etc/redis
    ports:
      - "6379:6379"
    command: >
      sh -c '
        redis-server /usr/local/etc/redis/redis.conf --aclfile /usr/local/etc/redis/users.acl
      '
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "$$REDIS_PASSWORD", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5
    tty: true
    stdin_open: true

  #cron:
    #image: alpine:latest
    #volumes:
      #- ./recount_task.sh:/recount_task.sh
    #command: >
      #sh -c '
        #chmod +x /recount_task.sh &&
        #apk add --no-cache curl &&
        #/recount_task.sh
      #'
    #networks:
      #- delivery-network
    #depends_on:
      #- backend

volumes:
  mysql_data:
  redis_data:
